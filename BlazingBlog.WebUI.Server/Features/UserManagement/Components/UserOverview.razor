@page "/user-overview"
@* Default starting point: @rendermode InteractiveServer *@
@* https://learn.dotnetwebacademy.com/courses/net-8-blazor-clean-architecture-masterclass/lectures/57032789 
    Alternative way: Don't use prerendering... this allows us to see the frame first, then display it.
*@
@rendermode @(new InteractiveServerRenderMode(false)) 
@attribute [Authorize(Roles = "Admin")]
@inject ISender Sender

<h3>Users Overview</h3>

@if (users is null)
{
    <p>Loading users...</p>
}
else if (users.Count == 0)
{
    <p>No users!</p>
}
else
{
    <div class="grid">
        <QuickGrid Items="@users.AsQueryable()">
            <PropertyColumn Property="@(x => x.UserName)" Sortable="true" Title="User Name"></PropertyColumn>
            <PropertyColumn Property="@(x => x.Email)" Sortable="true" Title="Email Address"></PropertyColumn>
            <PropertyColumn Property="@(x => x.Roles)" Title="Roles"></PropertyColumn>
            <TemplateColumn>
                <button @onclick="()=>OpenModal(context.Id, context.UserName)" class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#manageRolesModal">
                    🔐 Manage Roles
                </button>
            </TemplateColumn>
        </QuickGrid>
    </div>
}

<UserRolesModal ShowModal="@showModal" UserId="@selectedUserId" UserName="@selectedUserName" ModalClosed="CloseModal" />


<script>

    const myModal = document.getElementById('exampleModal')
    const myInput = document.getElementById('myInput')

    myModal.addEventListener('shown.bs.modal', () => {
    myInput.focus()
    })
</script>

@code {
    //watch out for the bug about the server rendering twice with prerendering...
    public List<UserResponse>? users;
    private bool showModal = false;
    private string selectedUserId = string.Empty;
    private string selectedUserName = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadUsers();
    }

    private void OpenModal(string userId, string userName)
    {
        selectedUserId = userId;
        selectedUserName = userName;
        showModal = true;
        // Console.WriteLine($"Open Modal -> {selectedUserName} // {selectedUserId}");

    }

    private async Task CloseModal()
    {
        showModal = false;
        await LoadUsers();
        StateHasChanged();
    }

    private async Task LoadUsers()
    {
        var result = await Sender.Send(new GetUsersQuery());
        if (result.Success)
        {
            users = result;
        }
        else
        {
            // to do: deal with the error later...
            users = new();
        }
    }
}
