@page "/articles/{articleId:int}"
@inject ISender Sender

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p class="alert-danger">
        @errorMessage
    </p>
}
else
{
    <PageTitle>@article.Title</PageTitle>
    <h3>@article.Title</h3>
    <p>
        <time>@article.DatePublished.ToLongDateString()</time>
        <span>by @article.UserName</span>
        @if (article.CanEdit) // basic way would be to just use AuthorizeView with appropriate roles
        {
            <span class="p-lg-1"><a href="/article-editor/@article.Id">Edit</a></span>
        }
    </p>
    <p>
        @article.Content
    </p>
}


@code {
    [Parameter]
    public int ArticleId { get; set; }
    private ArticleResponse article;
    private string errorMessage = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        var result = await Sender.Send(new GetArticleByIdQuery
            {
                Id = ArticleId
            });
        if (result.Success && result.Value is not null)
        {
            article = result.Value.Adapt<ArticleResponse>();
        }
        else
        {
            errorMessage = result.Error ?? "Sorry, something went wrong...";
        }
    }

}
